# Upstreams
upstream backend {
    least_conn;
    {% for frontend_host in groups.jists_webservers %}
        server {{ hostvars[frontend_host].internal_ip }}:443;
    {% endfor %}
}

# HTTPS Server
server {
    listen 443;
    server_name {{ jitsi_domain }};
    error_log /var/log/nginx/jitsi-meet-error.log;
    ssl on;
    ssl_certificate /etc/ssl/certs/{{ jitsi_domain }}.fullchain.pem;
    ssl_certificate_key /etc/ssl/private/{{ jitsi_domain }}.key.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    access_log /var/log/nginx/jitsi-meet-access.log;
    location / {
        proxy_pass https://backend/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Nginx-Proxy true;
        proxy_redirect off;
        proxy_ssl_verify off;
    }
    # BOSH
    location = /http-bind {
        proxy_pass      http://{{prosody_ip}}:5280/http-bind;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
        proxy_buffering off;
        tcp_nodelay on;
    }
    # xmpp websockets
    location /xmpp-websocket {
        proxy_pass http://{{prosody_ip}}:5280;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        tcp_nodelay on;
    }
}

server {

  listen 80;
  listen [::]:80;

  server_name {{ jitsi_domain }};

  location /.well-known/acme-challenge {
    default_type "text/plain";
    root /var/www/default;
  }

  location / {
    return 301 https://$host$request_uri;
  }

}
